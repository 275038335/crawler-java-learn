<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--<context:annotation-config />-->

    <!--<cache:annotation-driven cache-manager="cacheManager" />-->
    <!--<bean id="sessionRedisSentinelConfiguration"-->
          <!--class="org.springframework.data.redis.connection.RedisSentinelConfiguration">-->
        <!--<property name="master">-->
            <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                <!--<property name="name" value="mymaster" />-->
            <!--</bean>-->
        <!--</property>-->
        <!--<property name="sentinels">-->
            <!--<set>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host"-->
                                     <!--value="${session.redis.sentinels.host1}" />-->
                    <!--<constructor-arg name="port"-->
                                     <!--value="${session.redis.sentinels.port1}" />-->
                <!--</bean>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host"-->
                                     <!--value="${session.redis.sentinels.host2}" />-->
                    <!--<constructor-arg name="port"-->
                                     <!--value="${session.redis.sentinels.port2}" />-->
                <!--</bean>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host"-->
                                     <!--value="${session.redis.sentinels.host3}" />-->
                    <!--<constructor-arg name="port"-->
                                     <!--value="${session.redis.sentinels.port3}" />-->
                <!--</bean>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="cacheRedisSentinelConfiguration"-->
          <!--class="org.springframework.data.redis.connection.RedisSentinelConfiguration">-->
        <!--<property name="master">-->
            <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                <!--<property name="name" value="mymaster" />-->
            <!--</bean>-->
        <!--</property>-->
        <!--<property name="sentinels">-->
            <!--<set>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host"-->
                                     <!--value="${cache.redis.sentinels.host1}" />-->
                    <!--<constructor-arg name="port"-->
                                     <!--value="${cache.redis.sentinels.port1}" />-->
                <!--</bean>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host"-->
                                     <!--value="${cache.redis.sentinels.host1}" />-->
                    <!--<constructor-arg name="port"-->
                                     <!--value="${cache.redis.sentinels.port2}" />-->
                <!--</bean>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host"-->
                                     <!--value="${cache.redis.sentinels.host1}" />-->
                    <!--<constructor-arg name="port"-->
                                     <!--value="26379" />-->
                <!--</bean>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;session的database为0,并且该bean的ID不能随便改动,因为RedisHttpSessionConfiguration2依赖这个ID &ndash;&gt;-->
    <!--<bean id="sessionJedisConnectionFactory"-->
          <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
          <!--p:usePool="true" p:database="7">-->
        <!--<constructor-arg name="sentinelConfig"-->
                         <!--ref="sessionRedisSentinelConfiguration" />-->
    <!--</bean>-->
    <!--&lt;!&ndash;database根据自己的业务线来设定 &ndash;&gt;-->
    <!--<bean id="cacheJedisConnectionFactory"-->
          <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
          <!--p:usePool="true" p:database="7">-->
        <!--<constructor-arg name="sentinelConfig"-->
                         <!--ref="cacheRedisSentinelConfiguration" />-->
    <!--</bean>-->

    <!--<bean id="cacheRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"-->
          <!--p:connectionFactory-ref="cacheJedisConnectionFactory">-->
        <!--<property name="keySerializer">-->
            <!--<bean-->
                    <!--class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
        <!--</property>-->
        <!--<property name="hashKeySerializer">-->
            <!--<bean-->
                    <!--class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;缓存时长根据自己的业务需求来设定 &ndash;&gt;-->
    <!--<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">-->
        <!--<constructor-arg ref="cacheRedisTemplate" />-->
        <!--<property name="defaultExpiration" value="86400" />-->
        <!--<property name="expires">-->
            <!--<map>-->
                <!--&lt;!&ndash;accessToken&ndash;&gt;-->
                <!--<entry key="jc:c:const:accessToken" value="7200"/>-->
                <!--<entry key="jc:c:const:jsApiTicket" value="7200"/>-->
            <!--</map>-->
        <!--</property>-->
    <!--</bean>-->

</beans>